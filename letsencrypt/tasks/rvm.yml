---
- name: packages
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    state: present
    cache_valid_time: 86400
  with_flattened:
  - '{{rvm_packages}}'

- name: Check GPG keys
  command: 'gpg --list-keys {{ rvm_gpg_keys }}'
  failed_when: no
  changed_when: no
  register: rvm_gpg_keys_check
  become: yes
  become_user: "{{ rvm_user }}"

- name: Import GPG keys
  command: 'gpg --keyserver {{ rvm_gpg_key_server }} --recv-keys {{ rvm_gpg_keys }}'
  ignore_errors: yes
  register: rvm_import_gpg_keys_result
  become: yes
  become_user: "{{ rvm_user }}"
  when: rvm_gpg_keys_check.rc != 0

- name: Alternative GPG keys
  shell: 'curl -sSL {{ rvm_gpg_key_alternative_url }} | gpg --import -'
  become: yes
  become_user: "{{ rvm_user }}"
  when: rvm_gpg_keys_check.rc != 0 and rvm_import_gpg_keys_result.rc != 0

- name: Install RVM
  shell: >
    curl -L https://get.rvm.io
    | bash -s stable --autolibs=disable --auto-dotfiles
  args:
    creates: ~/.rvm
  become: yes
  become_user: "{{ rvm_user }}"

- name: ruby versions
  shell: >
    ~/.rvm/bin/rvm install
    {{ '--default' if item == rvm_default else '' }}
    {{ item }}
  args:
    creates: "~/.rvm/rubies/ruby-{{ item }}"
  become: yes
  become_user: "{{ rvm_user }}"
  with_flattened:
  - "{{ rvm_rubies }}"
  - "{{ rvm_default }}"

- name: facts
  set_fact:
    RUBY_PREFIX: '~/.rvm/bin/rvm default do '
    RUBY_BIN: '/home/{{ rvm_user }}/.rvm/gems/ruby-{{ rvm_default }}/wrappers/ruby'

- name: Install gems
  shell: >
    {{ RUBY_PREFIX }} gem list
    | if ! grep "^{{ item }} " ; then {{ RUBY_PREFIX }} gem install {{ item }} ; fi
  become: yes
  become_user: "{{ rvm_user }}"
  with_flattened:
  - '{{rvm_install_gems}}'
  register: ruby_rvm_gem_install_result
  changed_when: >
    "Successfully installed {{ item }}" in ruby_rvm_gem_install_result.stdout

